name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  USER_NAME: ${{github.actor}}
  
jobs:
  compute:
      runs-on: ubuntu-latest
      outputs:
        REGISTRY: ${{ env.REGISTRY }}
        USER_NAME: ${{ env.USER_NAME }}
      steps:
      - name: Compute outputs
        run: |
          echo "REGISTRY=${{ env.REGISTRY }}" >> $GITHUB_OUTPUT
          echo "USER_NAME=${{ env.USER_NAME }}" >> $GITHUB_OUTPUT   
          
  tag:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.create_tag.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Create new tag (bump patch)
        id: create_tag
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: "v"
          default_bump: major

  build:
    runs-on: ubuntu-24.04-arm
    needs: 
      - tag
      - compute
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./TelegramMultiBot/Dockerfile
            image: ${{ needs.compute.outputs.REGISTRY }}/${{ needs.compute.outputs.USER_NAME }}/bober-bot
          - dockerfile: ./ConfigUI/Dockerfile
            image: ${{ needs.compute.outputs.REGISTRY }}/${{ needs.compute.outputs.USER_NAME }}/bober-config-ui
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.5.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.8.0
        with:
          images: ${{ matrix.image }}
          tags: |
            type=raw,value=${{ needs.tag.outputs.new_tag }}
            type=raw,value=latest

      - name: Build and push Docker images
        uses: docker/build-push-action@v6.7.0
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: linux/arm64
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


